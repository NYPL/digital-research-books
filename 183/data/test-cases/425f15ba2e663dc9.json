{
  "uid" : "425f15ba2e663dc9",
  "name" : "test_importFromHathiTrustDataFile_standard",
  "fullName" : "tests.unit.test_hathitrust_process.TestHathiTrustProcess#test_importFromHathiTrustDataFile_standard",
  "historyId" : "f45556906d211f828e6c6ffd7a014061",
  "time" : {
    "start" : 1652887437774,
    "stop" : 1652887437777,
    "duration" : 3
  },
  "status" : "broken",
  "statusMessage" : "ValueError: unconverted data remains: -0000",
  "statusTrace" : "self = <tests.unit.test_hathitrust_process.TestHathiTrustProcess object at 0x7fe295eef190>\ntestInstance = <tests.unit.test_hathitrust_process.TestHathiTrustProcess.testInstance.<locals>.TestHathiProcess object at 0x7fe295b40c10>\nhathiFilesData = [{'created': '2020-01-01T00:00:00-0000', 'full': False, 'url': 'hathiUrl1'}, {'created': '2019-01-01T00:00:00-0000', 'full': True, 'url': 'hathiUrl2'}, {'created': '2018-01-01T00:00:00-0000', 'full': False, 'url': 'hathiUrl3'}]\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7fe295b9bb80>\n\n    def test_importFromHathiTrustDataFile_standard(self, testInstance, hathiFilesData, mocker):\n        mockRequest = mocker.patch.object(requests, 'get')\n        mockListResponse = mocker.MagicMock()\n        mockRequest.return_value = mockListResponse\n        mockListResponse.json.return_value = hathiFilesData\n    \n        mockImport = mocker.patch.object(HathiTrustProcess, 'importFromHathiFile')\n    \n>       testInstance.importFromHathiTrustDataFile()\n\ntests/unit/test_hathitrust_process.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/newrelic/api/background_task.py:117: in wrapper\n    return wrapped(*args, **kwargs)\nprocesses/hathiTrust.py:66: in importFromHathiTrustDataFile\n    fileJSON.sort(\nprocesses/hathiTrust.py:67: in <lambda>\n    key=lambda x: datetime.strptime(\n/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = '2020-01-01T00:00:00-0000', format = '%Y-%m-%dT%H:%M:%S'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n            raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\n        if len(data_string) != found.end():\n>           raise ValueError(\"unconverted data remains: %s\" %\n                              data_string[found.end():])\nE           ValueError: unconverted data remains: -0000\n\n/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/_strptime.py:352: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1652887435308,
      "stop" : 1652887435308,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "mocker",
    "time" : {
      "start" : 1652887437774,
      "stop" : 1652887437774,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testInstance",
    "time" : {
      "start" : 1652887437774,
      "stop" : 1652887437774,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestHathiTrustProcess",
    "time" : {
      "start" : 1652887437738,
      "stop" : 1652887437738,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "hathiFilesData",
    "time" : {
      "start" : 1652887437774,
      "stop" : 1652887437774,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "mocker::0",
    "time" : {
      "start" : 1652887437979,
      "stop" : 1652887437979,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestHathiTrustProcess::0",
    "time" : {
      "start" : 1652887438004,
      "stop" : 1652887438004,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.unit"
  }, {
    "name" : "suite",
    "value" : "test_hathitrust_process"
  }, {
    "name" : "subSuite",
    "value" : "TestHathiTrustProcess"
  }, {
    "name" : "host",
    "value" : "fv-az196-598"
  }, {
    "name" : "thread",
    "value" : "2577-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.unit.test_hathitrust_process"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 166,
        "unknown" : 0,
        "total" : 168
      },
      "items" : [ {
        "uid" : "c91550a07f0de5ff",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/182//#testresult/c91550a07f0de5ff",
        "status" : "broken",
        "statusDetails" : "ValueError: time data '2020-01-01T00:00:00-0000' does not match format '%Y-%m-%d %H:%M:%S %z'",
        "time" : {
          "start" : 1652818448124,
          "stop" : 1652818448128,
          "duration" : 4
        }
      }, {
        "uid" : "c45761745c82c72",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/181//#testresult/c45761745c82c72",
        "status" : "passed",
        "time" : {
          "start" : 1652660667406,
          "stop" : 1652660667411,
          "duration" : 5
        }
      }, {
        "uid" : "825f79393b8f52e2",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/180//#testresult/825f79393b8f52e2",
        "status" : "passed",
        "time" : {
          "start" : 1652475394626,
          "stop" : 1652475394630,
          "duration" : 4
        }
      }, {
        "uid" : "4adfaae87ae4aeb9",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/179//#testresult/4adfaae87ae4aeb9",
        "status" : "passed",
        "time" : {
          "start" : 1652474613983,
          "stop" : 1652474613988,
          "duration" : 5
        }
      }, {
        "uid" : "40e28f4199a60aaf",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/178//#testresult/40e28f4199a60aaf",
        "status" : "passed",
        "time" : {
          "start" : 1652310307102,
          "stop" : 1652310307108,
          "duration" : 6
        }
      }, {
        "uid" : "e3b1dc398a689c50",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/177//#testresult/e3b1dc398a689c50",
        "status" : "passed",
        "time" : {
          "start" : 1652199573297,
          "stop" : 1652199573301,
          "duration" : 4
        }
      }, {
        "uid" : "431ebf4d4b28d135",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/176//#testresult/431ebf4d4b28d135",
        "status" : "passed",
        "time" : {
          "start" : 1652055695470,
          "stop" : 1652055695474,
          "duration" : 4
        }
      }, {
        "uid" : "8b028a56ffecbc03",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/175//#testresult/8b028a56ffecbc03",
        "status" : "passed",
        "time" : {
          "start" : 1651450887606,
          "stop" : 1651450887609,
          "duration" : 3
        }
      }, {
        "uid" : "2c8c879ae9550483",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/174//#testresult/2c8c879ae9550483",
        "status" : "passed",
        "time" : {
          "start" : 1651257814073,
          "stop" : 1651257814078,
          "duration" : 5
        }
      }, {
        "uid" : "f9915e321bdee1d",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/172//#testresult/f9915e321bdee1d",
        "status" : "passed",
        "time" : {
          "start" : 1650985763612,
          "stop" : 1650985763616,
          "duration" : 4
        }
      }, {
        "uid" : "81c56ba7d1a57ff9",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/171//#testresult/81c56ba7d1a57ff9",
        "status" : "passed",
        "time" : {
          "start" : 1650921250493,
          "stop" : 1650921250496,
          "duration" : 3
        }
      }, {
        "uid" : "dbe3ef392ba16252",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/170//#testresult/dbe3ef392ba16252",
        "status" : "passed",
        "time" : {
          "start" : 1650845960466,
          "stop" : 1650845960469,
          "duration" : 3
        }
      }, {
        "uid" : "6a92a24cda13cbcc",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/169//#testresult/6a92a24cda13cbcc",
        "status" : "passed",
        "time" : {
          "start" : 1650241512779,
          "stop" : 1650241512783,
          "duration" : 4
        }
      }, {
        "uid" : "a0642f3d243f0a3a",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/168//#testresult/a0642f3d243f0a3a",
        "status" : "passed",
        "time" : {
          "start" : 1649777261182,
          "stop" : 1649777261185,
          "duration" : 3
        }
      }, {
        "uid" : "c289888e91ed14d3",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/167//#testresult/c289888e91ed14d3",
        "status" : "passed",
        "time" : {
          "start" : 1649636426497,
          "stop" : 1649636426501,
          "duration" : 4
        }
      }, {
        "uid" : "6458c6754136d03e",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/166//#testresult/6458c6754136d03e",
        "status" : "passed",
        "time" : {
          "start" : 1649440564388,
          "stop" : 1649440564391,
          "duration" : 3
        }
      }, {
        "uid" : "65b0fe1ab865679c",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/165//#testresult/65b0fe1ab865679c",
        "status" : "passed",
        "time" : {
          "start" : 1649282926902,
          "stop" : 1649282926905,
          "duration" : 3
        }
      }, {
        "uid" : "f87bbb67f052dc32",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/164//#testresult/f87bbb67f052dc32",
        "status" : "passed",
        "time" : {
          "start" : 1649174462461,
          "stop" : 1649174462465,
          "duration" : 4
        }
      }, {
        "uid" : "9d5062a072b27282",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/163//#testresult/9d5062a072b27282",
        "status" : "passed",
        "time" : {
          "start" : 1649170012451,
          "stop" : 1649170012454,
          "duration" : 3
        }
      }, {
        "uid" : "f3e88af678ab3770",
        "reportUrl" : "https://NYPL.github.io/drb-etl-pipeline/162//#testresult/f3e88af678ab3770",
        "status" : "passed",
        "time" : {
          "start" : 1649169431571,
          "stop" : 1649169431573,
          "duration" : 2
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "425f15ba2e663dc9.json",
  "parameterValues" : [ ]
}