name: Playwright Tests for DRB Web via BrowserStack
on:
  workflow_call:
    inputs:
      base_url:
        description: "Base URL for environment"
        default: "http://local.nypl.org:3000"
        required: false
        type: string

jobs:
  test:
    name: Playwright Tests for DRB Web via BrowserStack
    runs-on: ubuntu-latest
    steps:
      - name: BrowserStack Env Setup
        uses: "browserstack/github-actions/setup-env@master"
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_PW }}
          project-name: NYPL DRB
          build-name: DRB Web Automated Tests

      - name: Check port availability
        run: |
          sudo lsof -i :3000 || echo "Port 3000 is available"

      - name: BrowserStack Local Tunnel Setup # set up tunnel connection between GitHub Actions runner environment and BrowserStack device cloud
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random

      - name: Setup BrowserStack using npm package
        run: |
          npm install -g browserstack-local
          browserstack-local --key ${{ secrets.BROWSERSTACK_PW }} --force-local --verbose &
          sleep 15
          curl -v http://bs-local.com:45691/check || echo "BrowserStackLocal not running"

      - name: Verify BrowserStack Local
        run: |
          # Wait longer for BrowserStackLocal to initialize
          sleep 15
          echo "Checking BrowserStack Local status..."
          curl -v http://bs-local.com:45691/check || echo "BrowserStackLocal not running"

      - name: Setup BrowserStackLocal manually
        run: |
          wget https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip
          unzip BrowserStackLocal-linux-x64.zip
          ./BrowserStackLocal --key ${{ secrets.BROWSERSTACK_PW }} --force-local --verbose --local-identifier random &
          sleep 15
          ps aux | grep BrowserStackLocal

      - name: Verify BrowserStackLocal installation
        run: |
          find / -name BrowserStackLocal 2>/dev/null || echo "BrowserStackLocal not found"
          ps aux | grep -i browserstack

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: "web/.nvmrc"
          cache: npm
          cache-dependency-path: "web/package-lock.json"

      - name: Set environment for branch
        working-directory: ./web
        run: |
          touch .env
          echo "BASE_URL=http://localhost:3000" >> .env
          echo "BASE_URL=${{ inputs.base_url }}"
        shell: bash

      # - name: Add hosts to /etc/hosts
      #   if: inputs.base_url == 'http://local.nypl.org:3000/'
      #   run: |
      #     echo "${{ inputs.base_url }}"
      #     sudo echo "127.0.0.1 local.nypl.org" | sudo tee -a /etc/hosts

      - name: Install dependencies
        working-directory: ./web
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: ./web
        run: npx playwright install --with-deps

      - name: Build app
        working-directory: ./web
        run: NODE_ENV=test npm run build

      - name: Start the app with logging
        if: inputs.base_url == 'http://localhost:3000/'
        working-directory: ./web
        run: |
          NODE_ENV=test npm start > server.log 2>&1 &
          SERVER_PID=$!
          sleep 10
          # Check if server is still running
          if ps -p $SERVER_PID > /dev/null; then
            echo "Server started successfully with PID $SERVER_PID"
          else
            echo "Server failed to start or crashed"
            cat server.log
          fi
          # Try to access the server
          curl -v http://localhost:3000/ || echo "Could not connect to server"
        shell: bash

      # - name: Start the app
      #   # if: inputs.base_url == 'http://local.nypl.org:3000/'
      #   working-directory: ./web
      #   run: |
      #     HOST=0.0.0.0 PORT=3000 NODE_ENV=test npm start &
      #     sleep 5
      #   shell: bash

      - name: Network diagnostics
        run: |
          echo "==== Testing connectivity ===="
          curl -v http://localhost:3000 || echo "Cannot connect to localhost:3000"
          netstat -tulpn | grep 3000
          ps aux | grep node

      - name: Network connectivity test
        run: |
          echo "=== Network diagnostics ==="
          # Check local server
          curl -v http://localhost:3000/ || echo "Cannot access local server"
          # Check if BrowserStackLocal is tunneling correctly
          curl -v http://bs-local.com:45691/check
          # Check network interfaces
          ip addr
          # Check listening ports
          netstat -tulpn

      - name: Run tests on BrowserStack with explicit configuration
        id: run-tests
        working-directory: ./web
        run: |
          cat > .browserstack.json << EOL
          {
            "browsers": [
              {
                "browser": "chrome",
                "os": "Windows 10",
                "versions": ["latest"]
              }
            ],
            "run_settings": {
              "project_name": "DRB",
              "build_name": "DRB Web Automated Tests",
              "parallels": 1,
              "local": true,
              "local_identifier": "random",
              "debug": true,
              "network_logs": true
            }
          }
          EOL
            
          # Set explicit environment variables
          export BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }}
          export BROWSERSTACK_ACCESS_KEY=${{ secrets.BROWSERSTACK_PW }}
          export BROWSERSTACK_LOCAL=true
          export BROWSERSTACK_LOCAL_IDENTIFIER=random
            
          # Run tests with verbose logging
          npx browserstack-node-sdk playwright test --verbose
        continue-on-error: true

      # - name: Run tests on BrowserStack
      #   id: run-tests
      #   working-directory: ./web
      #   run: npx browserstack-node-sdk playwright test
      #   continue-on-error: true

      - name: Set failure workflow status ðŸš¨
        if: steps.run-tests.outcome != 'success'
        run: exit 1

      - name: Set successful workflow status âœ…
        if: steps.run-tests.outcome == 'success'
        run: exit 0
