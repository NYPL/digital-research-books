name: QA Environment Tests (Self-Hosted)
on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "tests/**"
      - "services/**"
      - "docker-compose.yml"
      - "Dockerfile"
      - "requirements.txt"

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNTID: "491147561046"
  IMAGE_TAG: nypl-nginx-test
  ENVIRONMENT: qa

permissions:
  id-token: write
  contents: read

jobs:
  qa-tests:
    name: QA Integration Tests
    runs-on: self-hosted
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GHARunnerSession

      - name: Install system dependencies
        run: |
          # Detect package manager and install dependencies
          if command -v apt-get >/dev/null 2>&1; then
            echo "Debian/Ubuntu system detected - using apt"
            sudo apt-get update
            sudo apt-get install -y \
              python3.9 \
              python3.9-dev \
              python3.9-venv \
              gcc \
              g++ \
              make \
              libssl-dev
            sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
            sudo update-alternatives --set python3 /usr/bin/python3.9
          elif command -v dnf >/dev/null 2>&1; then
            echo "RHEL/Fedora system detected - using dnf"
            sudo dnf groupinstall -y "Development Tools"
            sudo dnf install -y \
              python39 \
              python39-devel \
              openssl-devel
            sudo alternatives --set python3 /usr/bin/python3.9
          elif command -v yum >/dev/null 2>&1; then
            echo "CentOS/RHEL system detected - using yum"
            sudo yum groupinstall -y "Development Tools"
            sudo yum install -y \
              python39 \
              python39-devel \
              openssl-devel
            sudo alternatives --set python3 /usr/bin/python3.9
          else
            echo "ERROR: Unsupported package manager"
            exit 1
          fi

          # Verify installation
          python3 --version
          pip3 --version

      - name: Set up Python environment
        run: |
          python3 -m pip install --upgrade pip wheel
          pip3 install -r requirements.txt

      - name: Run QA integration tests
        run: |
          pytest tests/integration --env=qa