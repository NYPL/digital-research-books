name: QA Environment Tests (Self-Hosted)
on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "tests/**"
      - "services/**"
      - "docker-compose.yml"
      - "Dockerfile"
      - "requirements.txt"

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNTID: "491147561046"
  IMAGE_TAG: nypl-nginx-test
  ENVIRONMENT: qa

permissions:
  id-token: write
  contents: read

jobs:
  qa-tests:
    name: QA Integration Tests
    runs-on: self-hosted
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GHARunnerSession

      - name: Install system build tools
        run: |
          # Ubuntu/Debian
          if command -v apt-get >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake git
          # RHEL/CentOS
          elif command -v dnf >/dev/null 2>&1; then
            sudo dnf install -y gcc cmake git
          elif command -v yum >/dev/null 2>&1; then
            sudo yum install -y gcc cmake git
          fi

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            dev-requirements.txt

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          # Install fasttext first with build dependencies
          python -m pip install --no-cache-dir --force-reinstall \
            --global-option=build_ext \
            fasttext
          # Then install remaining requirements
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Verify installations
        run: |
          python -m pytest --version
          python -c "import fasttext; print(f'fasttext version: {fasttext.__version__}')"

      - name: Run QA integration tests
        run: |
          python -m pytest tests/integration --env=qa