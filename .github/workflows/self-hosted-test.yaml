name: 'ETL Pipeline Tests (Self-Hosted)'

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'api/**'
      - 'managers/**'
      - 'mappings/**'
      - 'model/**'
      - 'processes/**'
      - 'services/**'
      - 'tests/**'
      - 'utils/**'
      - 'dev-requirements.txt'
      - 'requirements.txt'
      - 'main.py'
      - 'Makefile'

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNTID: "491147561046"
  # Core service credentials
  NYPL_BIB_USER: ${{ secrets.NYPL_BIB_USER }}
  NYPL_BIB_PASSWORD: ${{ secrets.NYPL_BIB_PASSWORD }}
  GITHUB_API_KEY: ${{ secrets.GITHUB_API_KEY }}
  OCLC_WSKEY: ${{ secrets.OCLC_WSKEY }}
  OCLC_SECRET: ${{ secrets.OCLC_SECRET }}
  # AWS service parameters
  ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
  ELASTICSEARCH_INDEX: ${{ secrets.ELASTICSEARCH_INDEX }}
  ELASTICSEARCH_PORT: ${{ secrets.ELASTICSEARCH_PORT }}
  ELASTICSEARCH_SCHEME: ${{ secrets.ELASTICSEARCH_SCHEME }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}

jobs:
  run-tests:
    runs-on: self-hosted
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GHARunnerSession
          # Add cross-account access if needed
          role-chaining: true
          role-duration-seconds: 1800

      - name: Verify AWS permissions
        run: |
          aws sts get-caller-identity
          # Test SSM access if needed
          aws ssm get-parameter --name /drb/qa/nypl-api/public-key --with-decryption --query Parameter.Value --output text || \
          echo "Warning: SSM access test failed - some tests may fail"

      - name: Install Python 3.9 and tools
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt update
          sudo apt install -y \
            python3.9 \
            python3.9-venv \
            python3.9-dev \
            gcc \
            g++ \
            build-essential
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
          sudo update-alternatives --set python3 /usr/bin/python3.9

      - name: Set up Python environment
        run: |
          python3 -m pip install --upgrade pip wheel
          pip3 install -r requirements.txt -r dev-requirements.txt

      - name: Run integration tests
        run: |
          python3 -m pytest tests/integration --env=qa