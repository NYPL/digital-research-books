name: QA Environment Tests (Self-Hosted)
on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "tests/**"
      - "services/**"
      - "docker-compose.yml"
      - "Dockerfile"
      - "requirements.txt"

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNTID: "491147561046"
  IMAGE_TAG: nypl-nginx-test
  ENVIRONMENT: qa

permissions:
  id-token: write
  contents: read

jobs:
  qa-tests:
    name: QA Integration Tests
    runs-on: self-hosted
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GHARunnerSession

      - name: Install Python 3.9 (Universal Approach)
        run: |
          # For any Linux distribution
          PYTHON_VERSION=3.9.18
          wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz
          tar xzf Python-${PYTHON_VERSION}.tgz
          cd Python-${PYTHON_VERSION}
          ./configure --enable-optimizations
          make -j $(nproc)
          sudo make altinstall
          cd ..
          python3.9 --version
          python3.9 -m ensurepip --upgrade
          python3.9 -m pip install --upgrade pip wheel

      - name: Install system build dependencies
        run: |
          # Ubuntu/Debian
          if command -v apt-get >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake git libssl-dev zlib1g-dev libffi-dev
          # RHEL/CentOS
          elif command -v dnf >/dev/null 2>&1; then
            sudo dnf install -y gcc cmake git openssl-devel zlib-devel libffi-devel
          elif command -v yum >/dev/null 2>&1; then
            sudo yum install -y gcc cmake git openssl-devel zlib-devel libffi-devel
          fi

      - name: Install project dependencies
        run: |
          python3.9 -m pip install -r requirements.txt
          # Special handling for fasttext
          python3.9 -m pip install --no-cache-dir --force-reinstall \
            --global-option=build_ext \
            fasttext

      - name: Verify installations
        run: |
          python3.9 -m pytest --version
          python3.9 -c "import fasttext; print(f'fasttext version: {fasttext.__version__}')"

      - name: Run QA integration tests
        run: |
          python3.9 -m pytest tests/integration --env=qa