name: 'ETL Pipeline Tests (Self-Hosted)'

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'api/**'
      - 'managers/**'
      - 'mappings/**'
      - 'model/**'
      - 'processes/**'
      - 'services/**'
      - 'tests/**'
      - 'utils/**'
      - 'dev-requirements.txt'
      - 'requirements.txt'
      - 'main.py'
      - 'Makefile'

permissions:
  contents: read
  id-token: write

jobs:
  run-tests:
    runs-on: self-hosted
    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNTID: "491147561046"
      ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
      ELASTICSEARCH_INDEX: ${{ secrets.ELASTICSEARCH_INDEX }}
      ELASTICSEARCH_PORT: ${{ secrets.ELASTICSEARCH_PORT }}
      ELASTICSEARCH_SCHEME: ${{ secrets.ELASTICSEARCH_SCHEME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            dev-requirements.txt

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install GCC 12
        run: |
          sudo apt update
          sudo apt install -y gcc-12 g++-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 60
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 60

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r dev-requirements.txt
          pip install -r requirements.txt

      - name: Run integration tests
        run: |
          pytest tests/integration --env=qa
