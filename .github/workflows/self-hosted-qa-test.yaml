name: QA Environment Tests (Amazon Linux)
on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "tests/**"
      - "services/**"
      - "docker-compose.yml"
      - "Dockerfile"
      - "requirements.txt"

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNTID: "491147561046"
  IMAGE_TAG: qa-nginx-test
  ENVIRONMENT: qa

permissions:
  id-token: write
  contents: read

jobs:
  qa-tests:
    name: QA Integration Tests
    runs-on: self-hosted
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNTID }}:role/GithubActionsRunnerRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Install development tools
        run: |
          sudo dnf groupinstall -y "Development Tools"
          sudo dnf install -y python39 openssl-devel bzip2-devel libffi-devel

      - name: Set up Python 3.9
        run: |
          sudo alternatives --set python3 /usr/bin/python3.9
          python3 --version

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip wheel
          pip3 install -r requirements.txt
          pip3 install -r dev-requirements.txt

      - name: Start Docker service
        run: |
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock
          docker --version

      - name: Build test container
        run: docker build -t ${{ env.IMAGE_TAG }} .

      - name: Run test container
        run: |
          docker run --name qa-test-container -d -p 443:443 \
            -e AWS_REGION=${{ env.AWS_REGION }} \
            ${{ env.IMAGE_TAG }}

      - name: Execute test suite
        run: |
          docker exec qa-test-container python3 -m pytest \
            tests/functional \
            tests/integration \
            --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results.xml

      - name: Cleanup containers
        if: always()
        run: |
          docker stop qa-test-container || true
          docker rm qa-test-container || true
