name: CI/CD - Auto Merge & Test

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  auto-merge-and-test:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT: qa
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Auto-Merge PR
        uses: actions/github-script@v6
        id: merge-pr
        with:
          script: |
            try {
              const response = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ github.event.pull_request.number }},
                commit_title: "Auto-merge: PR #${{ github.event.pull_request.number }}",
                merge_method: "merge"
              });
              return response.data.sha;
            } catch (error) {
              core.setFailed(`Merge failed: ${error.message}`);
            }

      - name: Checkout Merged Code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r dev-requirements.txt
          pip install -r requirements.txt

      - name: Run Full Test Suite
        env:
          ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
          ELASTICSEARCH_INDEX: ${{ secrets.ELASTICSEARCH_INDEX }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
        run: |
          pytest tests/unit/
          pytest tests/functional/
          pytest tests/integration/api --env=qa

      - name: Revert Merge on Failure
        if: failure()
        run: |
          git config --global user.name "CI/CD Bot"
          git config --global user.email "ci-cd@example.com"
          git fetch origin main
          git reset --hard HEAD~1
          git push origin main --force
          echo "::warning::Merge reverted due to test failures"

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: "#drb-dev"
          slack-message: |
            ${{ job.status }}: Tests for PR #${{ github.event.pull_request.number }}
            Merge: ${{ steps.merge-pr.outputs.result && 'Successful' || 'Failed' }}
            Tests: ${{ job.status == 'success' && 'Passed' || 'Failed' }}
            Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
